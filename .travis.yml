sudo: required
dist: focal
language: go

go:
  - 1.14.x

git:
  depth: false

env:
  global:
    - SDK_VERSION="0.16.0"
    - GO111MODULE=on
    - USER="redhat-developer"
    - EMAIL="openshift-dev-services@redhat.com"
    - REPO="service-binding-operator"
    - FILES="./tmp/manifests/*"
    - GH_REPO="github.com/${USER}/${REPO}.git"
    - GH_REMOTE_REPO="github.com/${USER}/service-binding-operator-manifests"
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - CHANGE_MINIKUBE_NONE_USER=true
    - KUBECONFIG=$HOME/.kube/config
    - TEST_ACCEPTANCE_TAGS="~@knative"
    - TEST_ACCEPTANCE_CLI="kubectl"

service:
  - docker

before_install:
  # Install deps
  - sudo apt-get update -y
  - sudo apt-get install -y python3 python3-venv

  - free -h
  # Download Operator SDK
  - curl -Lo operator-sdk https://github.com/operator-framework/operator-sdk/releases/download/v${SDK_VERSION}/operator-sdk-v${SDK_VERSION}-x86_64-linux-gnu && chmod +x operator-sdk && mv operator-sdk $GOPATH/bin/
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.19.2/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.14.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - mkdir -p $HOME/.kube $HOME/.minikube
  - touch $KUBECONFIG
  - minikube start --kubernetes-version=v1.19.2 --cpus $(nproc) --memory $(free -tm | grep "Total:" | awk '{print $2}')m
  - kubectl get nodes -o yaml
  - kubectl cluster-info
  - curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.17.0/install.sh | bash -s v0.17.0
#  - minikube update-context --profile=minikube
#  - "sudo chown -R travis: /home/travis/.minikube/"
#  - eval "$(minikube docker-env --profile=minikube)" && export DOCKER_CLI='docker'

script:
#  # Run merge-to-master-release
#  - if [ "$TRAVIS_BRANCH" = "master" ]; then
#    make merge-to-master-release &&
#    make push-to-manifest-repo &&
#    make prepare-bundle-to-quay || exit 1;
#    fi
  - make test-acceptance

after_success:
  - true
#  - MESSAGE=($TRAVIS_COMMIT)
#  - git clone git://${GH_REMOTE_REPO}
#  - cp -r ${FILES} ./service-binding-operator-manifests
#  - cd service-binding-operator-manifests
#  - git config user.email ${EMAIL}
#  - git config user.name ${USER}
#  - git add .
#  - git commit -m ${MESSAGE}
#  - git push "https://${GITHUB_TOKEN}@${GH_REMOTE_REPO}" master > /dev/null 2>&1
#  - cd ..
#  - make push-bundle-to-quay
